import streamlit as st
from core.utils import extract_hh_vacancy_id
from core.hh_api import fetch_hh_vacancy
from core.openai_client import generate_cover_letter
from core.resume_parser import parse_resume

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Cover Letter",
    page_icon="‚úâÔ∏è",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üìù –£–º–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∏—Å–µ–º")
st.markdown("""
–°–æ–∑–¥–∞–π—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ —Ä–µ–∑—é–º–µ –∏ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å hh.ru
""")

# –ë–ª–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
col1, col2 = st.columns(2)
with col1:
    resume_file = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ",
        type=["pdf", "docx", "doc", "txt"],
        help="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, DOC, DOCX, TXT"
    )
with col2:
    job_url = st.text_input(
        "–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é hh.ru",
        placeholder="https://hh.ru/vacancy/12345678"
    )

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
with st.sidebar:
    st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
    model_choice = st.selectbox(
        "–ú–æ–¥–µ–ª—å –ò–ò",
        ["moonshotai/kimi-dev-72b:free", "deepseek/deepseek-r1-0528-qwen3-8b:free"],
        index=0
    )
    tone_choice = st.selectbox(
        "–°—Ç–∏–ª—å –ø–∏—Å—å–º–∞",
        ["–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π", "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π", "–§–æ—Ä–º–∞–ª—å–Ω—ã–π"],
        index=0
    )
    word_count = st.slider(
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –ø–∏—Å—å–º–µ",
        min_value=150,
        max_value=500,
        value=250,
        step=25
    )

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∏—Å—å–º–∞
if st.button("‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∏—Å—å–º–æ", type="primary"):
    if not resume_file or not job_url:
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–∑—é–º–µ –∏ —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é")
    else:
        try:
            # –®–∞–≥ 1: –ü–∞—Ä—Å–∏–Ω–≥ —Ä–µ–∑—é–º–µ
            with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—é–º–µ..."):
                resume_text = parse_resume(resume_file)
                if not resume_text.strip():
                    raise ValueError("–†–µ–∑—é–º–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞")
            
            # –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–∏
            with st.spinner("–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏..."):
                vacancy_id = extract_hh_vacancy_id(job_url)
                job_data = fetch_hh_vacancy(vacancy_id)
            
            # –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∏—Å—å–º–∞
            with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∏—Å—å–º–æ..."):
                try:
                    letter = generate_cover_letter(
                    resume_text=resume_text,
                    job_desc=job_data['description'],
                    word_count=word_count,  # –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    tone=tone_choice,
                    model=model_choice
                )
                    
                        
                    word_count = len(letter.split())
                    st.info(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–∏—Å–µ–º: {word_count} —Å–ª–æ–≤")
                    
                except ValueError as e:
                    st.error(f"–û—à–∏–±–∫–∞: {str(e)}")
                    st.stop()
    
            
            # –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            st.success("‚úÖ –ü–∏—Å—å–º–æ –≥–æ—Ç–æ–≤–æ!")
            st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç:")
            edited_letter = st.text_area(
                "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∏—Å—å–º–æ:",
                letter,
                height=400
            )
            actual_words = len(letter.split())
            if abs(actual_words - word_count) > 10:
                st.warning(f"–ü–∏—Å—å–º–æ —Å–æ–¥–µ—Ä–∂–∏—Ç {actual_words} —Å–ª–æ–≤ (–∑–∞–ø—Ä–æ—à–µ–Ω–æ {word_count})")
            # –ö–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            st.download_button(
                "üíæ –°–∫–∞—á–∞—Ç—å –∫–∞–∫ TXT",
                edited_letter,
                file_name=f"Cover_Letter_{vacancy_id}.txt"
            )
            
        except Exception as e:
            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
            st.info("""
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:
            1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
            2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞
            3. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª —Ä–µ–∑—é–º–µ
            """)

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
with st.expander("‚ÑπÔ∏è –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å"):
    st.markdown("""
    1. **–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–∑—é–º–µ** –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF, DOC –∏–ª–∏ DOCX
    2. **–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É** –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é —Å hh.ru
    3. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã** –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    4. **–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É** "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å"
    5. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ** –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –ø–∏—Å—å–º–æ
    6. **–°–∫–∞—á–∞–π—Ç–µ** –≥–æ—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    """)